#!/usr/bin/perl

my $obsID = $ARGV[0] if ($ARGV[0]);
my $inst = $ARGV[1] if ($ARGV[1]);
my $doXrt = "no"; #if download XRT data
my $doBat = "no"; #if download Bat data
#my $doUvot = "yes"; # if download UVOT data

$doXrt = "yes" if $inst eq "xrt" or $inst eq "XRT";
$doBat = "yes" if $inst eq "bat" or $inst eq "BAT";

unless(defined $obsID){
print "Please input the observation ID (eg.00554620000):\n";
chomp($obsID = <STDIN>);
}

my $trigger = substr($obsID,2,6);
my $grbName;

### Download List
#### XRT file list
my $sat_fits = "http://www.swift.ac.uk/archive/reproc/"."$obsID"."/auxil/sw"."$obsID"."sat.fits.gz";
my $sat_fits_pat = "http://www.swift.ac.uk/archive/reproc/"."$obsID"."/auxil/sw"."$obsID"."pat.fits.gz";
my $sat_fits_uat = "http://www.swift.ac.uk/archive/reproc/"."$obsID"."/auxil/sw"."$obsID"."uat.fits.gz";
my $xhd_hk = "http://www.swift.ac.uk/archive/reproc/"."$obsID"."/xrt/hk/sw"."$obsID"."xhd.hk.gz";
my $pcw3_cl_evt = "http://www.swift.ac.uk/archive/reproc/"."$obsID"."/xrt/event/sw"."$obsID"."xpcw3po_cl.evt.gz";
my $wtw2_cl_evt = "http://www.swift.ac.uk/archive/reproc/"."$obsID"."/xrt/event/sw"."$obsID"."xwtw2po_cl.evt.gz";
my @downloadListXrt = ($sat_fits, $sat_fits_pat, $sat_fits_uat, $xhd_hk, $pcw3_cl_evt, $wtw2_cl_evt);

#### BAT file list
my $bat_uf_evt = "http://www.swift.ac.uk/archive/reproc/"."$obsID"."/bat/event/sw"."$obsID"."bevshsp_uf.evt.gz";
my $bdecb_hk = "http://www.swift.ac.uk/archive/reproc/"."$obsID"."/bat/hk/sw"."$obsID"."bdecb.hk.gz";
my $bdqcb_hk = "http://www.swift.ac.uk/archive/reproc/"."$obsID"."/bat/hk/sw"."$obsID"."bdqcb.hk.gz";
my $fits_bevtr = "http://www.swift.ac.uk/archive/reproc/"."$obsID"."/bat/event/sw"."$obsID"."bevtr.fits.gz";
my @downloadListBat = ($sat_fits, $sat_fits_pat, $sat_fits_uat, $bat_uf_evt, $bdecb_hk, $bdqcb_hk, $fits_bevtr);


### Find Name and Make folder
my $nameListWeb = "http://www.swift.ac.uk/grb_region/";
my $grbName = "NoName";
system 'curl',"$nameListWeb","-o","name.list";
open my $nameList, '<', "name.list"; 
while (<$nameList>) {
	if(/.*$trigger.*GRB\s(\w+)</){
	$grbName = $1 ;
		}
}
close $nameList;
system 'rm -f name.list';
print $grbName;
mkdir "$grbName" unless (-e "$grbName");


chdir("$grbName");
mkdir "$obsID" unless (-e "$obsID");
chdir("$obsID");



### download XRT data
if ($doXrt eq "yes"){

mkdir "xrt" unless (-e "xrt");
chdir("xrt");
foreach $file (@downloadListXrt){
system 'wget','--no-check-certificate','--no-clobber',"$file";
}
system 'gzip --decompress --force --keep *.evt.gz';
system 'rm -r *.evt.gz';

### Download Scripts for XRT
my $xfit_sh = "https://www.dropbox.com/s/vimowonheiuq7kq/xfit.sh";
my $ssplit = "https://www.dropbox.com/s/p9iv1drdogydajg/ssplit";
my $sgti = "https://www.dropbox.com/s/sis8d7ay1oktxtn/sgti";
system 'wget','--no-check-certificate',"$xfit_sh","-O","xfit.sh" unless (-e "xfit.sh");
system 'wget','--no-check-certificate',"$ssplit","-O","ssplit" unless (-e "ssplit");
system 'wget','--no-check-certificate',"$sgti","-O","sgti" unless (-e "sgti");

my $sgtiName = ReadFile("sgti");
$sgtiName =~ s/00554620000/$obsID/g;
WriteFile("sgti", $sgtiName);

my $ssplitName = ReadFile("ssplit");
$ssplitName =~ s/00554620000/$obsID/g;
WriteFile("ssplit", $ssplitName);
chdir("..");
}

### download bat data
if ($doBat eq "yes"){

mkdir "bat" unless (-e "bat");
chdir("bat");
foreach $file (@downloadListBat){
system 'wget','--no-check-certificate','--no-clobber',"$file";
}
system 'gzip --decompress --force --keep *.evt.gz';
system 'rm -r *.evt.gz';

### Download Scripts for BAT

my $sbat_sh = "https://www.dropbox.com/s/bgdimktwkhdn51d/sbat.sh";
system 'wget','--no-check-certificate',"$sbat_sh","-O","sbat.sh" unless (-e "sbat.sh");
my $sbatName = ReadFile("sbat.sh");
$sbatName =~ s/00554620000/$obsID/g;
WriteFile("sbat.sh", $sbatName);

chdir("..");

}











